# https://yaml.org/spec/1.2.2/#chapter-2-language-overview
# https://stackoverflow.com/a/21699210/9505959
# https://yaml-multiline.info

language:
  code: en
  name: English
  vernacular: English

commands:
  start: Welcome
  signlanguage: Choose a sign language
  botlanguage: Choose a bot language
  overlay: Text overlay
  settings: Show your settings
  help: Need help?
  protips: Advanced tips
  stats: Know your stats
  feedback: Send a comment to the developer

admin_commands:
  add: Add or unblock a user
  ban: Block a user
  users: Displays a list of all users
  setcommands: Sets commands by language scope
  notify: Notifies messages to a user
  backup: Sends a backup of the database
  logs: Displays the most recent log entries
  logfile: Sends a copy of the log file
  stats: Displays a summary of the database
  test: Displays the variables in memory
  reset_chapter: Alters the checksum of a chapter

# {} -> First name
barrier_to_entry: >
  Hello {}! I'm a bot that will help you get biblical passages.
  

  Please wait for the developer to accept your entry. In the meantime you can tell me why you want to use this bot and
  where you are from.
  

  If you want to learn more about God and his Word, or if you just want to learn sign language, please visit the
  official Jehovah's Witnesses website JW.ORG or the [ONLINE LIBRARY](https://wol.jw.org)

wait: Thank you! I will let you know when you are accepted.

# {0} -> First name
# {1} -> start command
step_1: >
  Congratulations {0}! You can now use this bot. Press /{1} to start

# {} -> signlanguage command
# instead of /ase American Sign Language, you can put yours sign language. e.g /hab or /slv to Vietnamese Sign Language)
step_2: >
  *Choose a sign language.
  
  Press /{} and select one.
  
  
  Or type its code. For example /ase for American Sign Language.

# {} -> help command
step_3: >
  Ok! Now you can ask me for Bible passages. I will try to understand everything you ask for. You can use the
  full name or its abbreviation, for example:


  Ecclesiastes 11:10

  Philippians 4:6, 7

  2 Tim 3:1-5

  Prov 19:19-22, 27 

  Psalm 119

  Jude 20

  Matthew


  If you need help, click on /{}



start:
  - Hello

yes: Yes
no: No
enabled: Enabled
disabled: Disabled


# Example: abcdef 1:1
# {} -> abcdef
book_not_found:
  - As far as I know, the book *{}* does not exist. If you tell me the language I will probably find it in another attempt.
  - The book *{}* does not exist in any Bible that I know of. Unless it is in the new scrolls. But my
    knowledge doesn't go that far.
  - I did not find the book *{}* in any Bible. could you try again with a different term?
  - I can't find the book *{}* you are looking for. Could you try again with a different word?
  - Could you repeat that *{}*?
  - I think I forgot my comprehension skills somewhere, because I didn't understand *{}*. 
  - Try as I might, I can't find *{}*. Could you write it differently?
  - Try as I might, I can't find *{}* in any edition of the Bible. could you try again?
  - As far as I know, *{}* does not exist in any Bible. 


# Example: mat 1, 2, 3
# {} -> Matthew
missing_chapter:
  - I think you forgot to tell me something.... the chapter of *{}* maybe?
  - Uhm... I seem to be missing something... ahh I know. the CHAPTER of *{}*.


# Example: mat 100:1
# {0} -> Matthew
# {1} -> 100
# {2} -> 28 (max chapter number for Matthew)
chapter_not_exists:
  - "*{0}* does not have the chapter *{1}*. Unless it's in the new rolls. But for now it only has *{2}* chapters."
  - Of all the editions of the Bible that I know of, *{0}* does not have chapter *{1}*.
  - No matter how hard I look, I can't find the *{1}* chapter of *{0}*.
  - Uhm... chapter *{1}* is not in *{0}*. Or so I understand.
  - Could you tell me in which Bible I find *{0}* *{1}*? It is not in the New World Translation.


# Example: mat 28:1, 50 
# {0} -> Matthew
# {1} -> 28
# {2} -> 50 (wrong verse)
# {3} -> 20 (max verse number for Matthew 28)
verse_not_exists:
  - *{2}* verse does not exist in *{0}* *{1}*.
  - "*{0}* *{1}* does not have that many verses. At most you can ask me up to verse *{3}*."
  - "*{0}* *{1}* has only *{3}* verses."
  - I cannot give you verse *{2}*, because *{0}* *{1}* has only *{3}* verses.


# Example: mat 28:1, 50, 51
# {0} -> Matthew
# {1} -> 28
# {2} -> 50, 51 (wrong verses)
# {3} -> 20 (max versenumber for Mathhew 28)
verses_not_exists:
  - Verses *{2}* do not exist in *{0}* *{1}*.
  - "*{0}* *{1}* does not have that many verses. At most you can ask me up to verse *{3}*."
  - I cannot give you verses *{2}*, because *{0}* *{1}* has only *{3}* verses.
 

 # Example: Isaiah 6:8 not in SLV
 # {0} -> Isaiah 6:8
 # {1} -> Vietnamese Sign Language
that_verse_no:
  - At the moment *{0}* is not available in *{1}*. 
  - Oh too bad, *{0}* is not yet interpreted in *{1}*. 
  - At the moment *{0}* is not yet in *{1}*. A little patience.
  - Maybe soon *{0}* will be available in *{1}*.

 # Example: Isaiah 6:8 not in SLV, but 1, 9, 11, 13 verses are available.
but_these_verses:
  - You can try changing the sign language, or try these verses.
  - But you can see these verses if you want.
  - But these verses are available.
  - But you can choose one of these verses.


# Example: Psalms 45 not in SLV
# {0} -> Psalms 45
# {1} -> Vietnamese Sign Language
that_chapter_no:
  - At the moment there are no *{0}* verses available in *{1}*.
  - There are no verses of *{0}* in *{1}* yet. 

# Example: Psalms 45 not in SLV, but 1, 9, 11, 19, 22 chapter are available.
but_these_chapters:
  - But you can try these chapters.
  - But these chapters are available.


# Example: Habakkuk not in SLV
# {0} -> Habakkuk
# {1} -> Vietnamese Sign Language
that_book_no:
  - Wow, there is no *{0}* verse in *{1}*. When one becomes available, I can show it to you.
  - For now there is no translated verse of *{0}* in *{1}*. 

but_these_books:
  - But I show you the books that are available.
  - But these books have translated verses.
  - Here are some books available.

# Example: john 8:1
# {} -> John 8:1
is_apocrypha:
  - Uhm... *{}* is not inspired by God.
  - I don't think *{}* would be of much interest to you, because it is apocryphal.
  - I would choose another passage in the Bible, one that is inspired by God. Because *{}* is not.

# Example: /abc
not_language:
  - I think you want to change the language, but I don't know any language with the code *{}*.
  - I don't know that language. Try again
  - I think that language does not exist.

# Example: /en
not_signlanguage:
  - The language *{}* is not a sign language. Try another language.
  - Choose a sign language. *{}* is a spoken language.

choose_book: "*Choose a book*".
choose_chapter: "*Choose a chapter*".
choose_verse: "*Choose a verse*".


fetching_videomarkers: Getting available verses
downloading: Downloading
trimming: Trimming
sending: Sending


# {0} -> signlanguage command
# {1} -> botlanguage command
# {2} -> protips command
help: >
  *Sign Language

  Change the sign language by typing its code as a command. For example, for American Sign Language, you can
  type /asl or /ase


  If you don't know its code, use /{0}, browse the menu and choose one.



  *Bot language

  I can talk to you in some languages. Click /{1} and choose one.



  *Pro Tips

  Want to know more advanced tips? Click /{2}

# {0} -> feedback command
# {1} -> url
# {2} -> bot username @nwtsigns_bot
pro_tips: >
  *Various biblical passages.
  
  You can ask me for up to 5 Bible quotes in one message.


  You can also momentarily change your sign language. Type your code followed by the Bible passage.
  For example:


  `/ase 1 Tim 2:6`

  `/hab 1 Tim 2:6`



  *Language of the bot

  You can change the language if you know its code. For example, for English you can type /en or /E.


  Even if you choose a language I do not yet know how to speak, I will be able to understand you when you ask me for biblical quotations in the new language.
  I will also try to send you the text of the biblical passages in that language. If you want to help translate the bot into more
  languages, leave me a comment /{0} and start translating [from here]({1}). 


  *Inline Mode

  Type `{2}` in any Telegram chat to send Bible passages.


# {} -> overlay command
overlay_info: >
  *Text overlay

  When you activate /{}, you will see the Bible quote in your language. Technically you can use any combination of 
  languages available on the [JW](https://www.jw.org) site.


  Note that if the book name is spelled the same in your _written_ language and in your sign language, you will not see the text overlay,
  you will not see the text overlay.


overlay_activated: You have *activated* the text overlay.
overlay_deactivated: You have *deactivated* the text overlay.


# {0} -> help command
fallback:
  - That doesn't look like biblical text.
  - Sorry, I can't help you with that.
  - Even though it looks like it, I'm not an artificial intelligence.
  - Uhm... it sounds like you don't want a Bible passage, do you?
  - If you need help, you can find it at /{0}
  - I can't help you with that, but I can send you Bible passages in many sign languages.
  - Ahhh, how interesting!

# {0} -> ase
# {1} -> American Sign Language
# {2} -> en
# {3} -> English
# {4} -> Enabled or Disabled
current_settings: |
  Sign Language: *{0} - {1}*
  Bot language: *{2} - {3}*
  Text overlay: *{4}*

menu_signlanguage: |
  🧏‍♂️ *Choose a sign language*.
  🌎 Total *{}*


# {} -> American Sign Language
ok_signlanguage_code:
  - Very good! I will now send you videos in *{}*.
  - Perfect! Now I'll look up Bible passages in *{}*.
  - Ok! Now I'll send you Bible passages in *{}*.


choose_botlang: >
  *Choose a language so we can understand each other.


  You can also change it quickly with its code. For example: /en, /es or /vi.


  You can even use /ko if you want to read the Bible in Korean.


# {} -> English
ok_botlang:
  - Perfect! I think we will understand each other better now.
  - Parlez-vous français? Just kidding 🤣 Let's talk in {} better.
  - Möchten Sie auf Spanisch sprechen? Just kidding, I don't know German either. {} is fine


# {} -> English
books_fetch_botlang:
  - Now I learned how to find Bible books in *{}*.
  - Thanks to you I now know what the Bible books are called in *{}*.
  - I just learned the names of the Bible books in *{}*.
  - I just took a look and already found the Bible in *{}*, so you can ask me for Bible passages.

# {0} -> Saluan (see https://wol.jw.org/loe/wol/h/r1127/lp-sal)
# {1} -> English
no_bible:
  - There seems to be no *{0}* language version of the Bible. I will continue to use the Bible in *{1}*.
  - I did not find the Bible in the *{0}* language. So I will continue to use the Bible in *{1}*.

# {0} -> English
no_botlang_but:
  - Although I can't speak *{0}* yet, I can understand you if you ask me for books in that language. If you want to help me with my 
    translation, write to the developer /feedback
  - I am not yet programmed to speak *{0}*, but you can help me. Leave a message for the developer, otherwise he will
    he won't know /feedback. For now I can understand you if you ask me for biblical passages in *{0}*.


# Feedback
feedback_1: Do you have any suggestions, is something wrong? You can cancel this conversation anytime /{}
feedback_2: Thanks for leaving me your feedback.
feedback_3: Oops! No worries.


# ADMIN. You don't have to translate it
waiting_list: "{} `{}` has been placed in the waiting room."
from_github: "{}` has been entered from the github link."
introduced_himself: "{} {} `{}` has been introduced."

db_summary: |
  ```
  {:>5} Saved bookmarks
  {:>5} Verses submitted
  {:>5} Chapters searched
  {:>5} Books searched
  {:>5} Sign Language
  {:>5} Allowed users
  {:>5} Blocked users
  {:>5} Waiting list users
  {:>5} Total users
  ```

wrong_notify: >
  The correct syntax is:
  `/{} <user_id1>...`

notify: >
  Send me the messages you want me to forward. They can be stickers, gifs, videos, images, whatever. When you are ready, type /{}.
  ready, type /{}. To cancel use /{}.

notify_success: Sent messages.
notify_cancel: Canceled.

logfile_notfound: No logfile.

setcommands: Commands with language scope and user specific set.

user_added: "{} {} has been added."
warn_user: I could not perform the operation because the user was not registered in the database.
user_banned: The user has been blocked.
user_stopped_bot: I could not add it because the user has stopped the bot.

checksum_touched: >
  I have altered the checksum of:
  {}
checksum_failed: I could not alter the checksum because {} {} has not been registered in the database.